{
    "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
    "plugins": [
        "@typescript-eslint", "react", "react-hooks"
    ],
    "env": {
        "browser": true,
        "jest": true
    },
    "extends": [
        "plugin:@typescript-eslint/recommended"
        // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    ],
    "parserOptions": {
        "project": ["./tsconfig.eslint.json"],
        "tsconfigRootDir": "./",
        // Allows for the parsing of modern ECMAScript features
        "ecmaVersion": 2018,
        "sourceType": "module",
        // Allows for the use of imports
        "ecmaFeatures": {
            // Allows for the parsing of JSX
            "jsx": true
        }
    },
    "rules": {
        // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
        // e.g. "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-explicit-any": "off",
        // These rules don't add much value, are better covered by TypeScript and good definition files
        "react/no-direct-mutation-state": "off",
        "react/no-deprecated": "off",
        "react/no-string-refs": "off",
        "react/require-render-return": "off",

        "react/jsx-filename-extension": [
            "warn",
            {
                "extensions": [".jsx", ".tsx"]
            }
        ], // also want to use with ".tsx"
        // Is this incompatible with TS props type?
        "react/prop-types": "off",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn"
    },
    "settings": {
        "react": {
            // Tells eslint-plugin-react to automatically detect the version of React to use
            "version": "detect"
        }
    }
}
